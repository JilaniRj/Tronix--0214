#!/usr/bin/env python
# coding: utf-8

# In[1]:


import requests
import csv
def fetch_sensor_data(url):
    try:
        response = requests.get(url)
        response.raise_for_status()  # Check for request errors
        csv_data = response.text
        sensor_data = list(csv.DictReader(csv_data.splitlines()))
        return sensor_data
    except requests.exceptions.RequestException as e:
        print(f"Error fetching sensor data: {e}")
        return None
# Example
sensor_url = 'https://example.com/sensor_data.csv'
data = fetch_sensor_data(sensor_url)
if data:
    for entry in data:
        print(entry)

        
        


# In[2]:


import csv
import time
from your_sensor_library import Sensor  #Here I have  Replace with actual sensor library
# Initialize your sensor (replace 'Sensor' with my actual sensor class)
sensor = Sensor()
# Open a CSV file in write mode
csv_file_path = 'sensor_data.csv'
with open(csv_file_path, 'w', newline='') as csv_file:
    # Create a CSV writer
    csv_writer = csv.writer(csv_file)
    # Write header (if needed)
    csv_writer.writerow(['Timestamp', 'SensorData1', 'SensorData2'])
    # Loop to pull data from sensors and write to CSV
    try:
        while True:
            # Read sensor data (replace with actual sensor reading)
            sensor_data = sensor.read_data()
            # Get current timestamp
            timestamp = time.strftime('%Y-%m-%d %H:%M:%S')
            # Write data to CSV
            csv_writer.writerow([timestamp, sensor_data['data1'], sensor_data['data2']])
            # Wait for some time before the next reading
            time.sleep(1)
    except KeyboardInterrupt:
        print("Data collection stopped.")
# Note: Make sure to replace 'your_sensor_library' and 'Sensor' with the actual names from your sensor library.









# In[ ]:




