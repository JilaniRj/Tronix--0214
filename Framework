import dash
import dash_core_components as dcc
import dash_html_components as html
import pandas as pd
import plotly.graph_objs as go
# Load data
df = pd.read_csv('M13.csv')
# Initialize Dash app
app = dash.Dash(__name__)
# Define layout
app.layout = html.Div([
    dcc.Graph(
        id='Target_TPH_vs_Actual_TPH',
        figure={
            'data': [
                go.Scatter(
                    x=df[df['Equipment'] == i]['Target_TPH'],
                    y=df[df['Equipment'] == i]['Actual_TPH'],
                    text=df[df['Equipment'] == i]['Equipment'],
                    mode='markers',
                    opacity=0.8,
                    marker={
                        'size': 15,
                        'line': {'width': 0.5, 'color': 'white'}
                    },
                    name=i
                ) for i in df.Equipment.unique()
            ],
            'layout': go.Layout(
                xaxis={'type': 'log', 'title': 'Target_TPH'},
                yaxis={'title': 'Actual_TPH'},
                margin={'l': 40, 'b': 40, 't': 10, 'r': 10},
                legend={'x': 0, 'y': 1},
                hovermode='closest'
            )
        }
    )
])
# Run the app
if __name__ == '__main__':
    app.run_server()

import pandas as pd
import matplotlib.pyplot as plt
import numpy as np
import scipy.stats as stats
import seaborn as sns
from matplotlib import rcParams

%matplotlib inline 
%pylab inline 

df = pd.read_csv('alldata.csv')
df.head()

df.isnull().any()

import pandas as pd
import numpy as np
import matplotlib
import matplotlib.pyplot as plt
import logging
# Configure logging
logging.basicConfig(
    format='%(asctime)s [%(levelname)s] [%(module)s] - %(message)s',
    datefmt='%Y-%m-%d %H:%M:%S',
    level=logging.INFO  # Adjust the logging level as needed (DEBUG, INFO, WARNING, ERROR, CRITICAL)
)
# Example usage
def my_function():
    logging.info("This is an equipment error.")
    logging.warning("This is a system fail message.")
    logging.error("This is an error message for operator.")
my_function()

